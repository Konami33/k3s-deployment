name: Setup GitHub Runner and Ansible

on:
  workflow_run:
    workflows: ["Deploy Infrastructure"]
    types:
      - completed

jobs:
  setup_runner:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1
      
      - name: Pulumi login
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
        run: pulumi login

      - name: Pulumi stack select
        run: pulumi stack select Konami33/k3s_infra/dev --cwd Infra

      - name: Pulumi refresh
        run: pulumi refresh --yes --cwd Infra
      
      - name: Save Pulumi outputs
        id: pulumi_outputs
        run: |
          GIT_RUNNER_IP=$(pulumi stack output git_runner_public_ip --cwd Infra)
          MASTER_NODE_IP=$(pulumi stack output master_private_ip --cwd Infra)
          WORKER_NODE1_IP=$(pulumi stack output worker1_private_ip --cwd Infra)
          WORKER_NODE2_IP=$(pulumi stack output worker2_private_ip --cwd Infra)
          echo "GIT_RUNNER_IP=$GIT_RUNNER_IP" >> $GITHUB_ENV
          echo "MASTER_NODE_IP=$MASTER_NODE_IP" >> $GITHUB_ENV
          echo "WORKER_NODE1_IP=$WORKER_NODE1_IP" >> $GITHUB_ENV
          echo "WORKER_NODE2_IP=$WORKER_NODE2_IP" >> $GITHUB_ENV
      
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}

      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: SSH to Runner EC2 and install GitHub Runner and Ansible
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ env.GIT_RUNNER_IP }} << EOF
          sudo apt-get update -y
          sudo apt install software-properties-common
          sudo apt-add-repository --yes --update ppa:ansible/ansible
          sudo apt-get install -y ansible
          ansible --version

          rm -r actions-runner

          mkdir actions-runner && cd actions-runner

          curl -o actions-runner-linux-x64-2.317.0.tar.gz -L https://github.com/actions/runner/releases/download/v2.317.0/actions-runner-linux-x64-2.317.0.tar.gz

          echo "9e883d210df8c6028aff475475a457d380353f9d01877d51cc01a17b2a91161d  actions-runner-linux-x64-2.317.0.tar.gz" | shasum -a 256 -c

          tar xzf ./actions-runner-linux-x64-2.317.0.tar.gz

          ./config.sh --url https://github.com/Konami33/k3s-deployment --token AQGGSGXEHNCEG7HR5YI4D4LGQXPVG --name "Git Runner 2"

          sudo ./svc.sh install
          sudo ./svc.sh start
          EOF

      - name: Copy Ansible directory to GitHub Runner
        run: |
          scp -o StrictHostKeyChecking=no -r $GITHUB_WORKSPACE/ansible ubuntu@${{ env.GIT_RUNNER_IP }}:/home/ubuntu/

      - name: SSH into GitHub Runner and run Ansible playbook
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ env.GIT_RUNNER_IP }} << 'EOF'

          # Create inventory file with dynamic IPs
          cat <<EOT > /home/ubuntu/ansible/inventory/hosts.ini
          [master]
          master-node ansible_host=${{ env.MASTER_NODE_IP }}

          [workers]
          worker-node-1 ansible_host=${{ env.WORKER_NODE1_IP }}
          worker-node-2 ansible_host=${{ env.WORKER_NODE2_IP }}

          [k3s_cluster:children]
          master
          workers
          EOT  
